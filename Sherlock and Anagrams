using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'sherlockAndAnagrams' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts STRING s as parameter.
     */

    public static int sherlockAndAnagrams(string s)
    {
        int count = 0;

            Dictionary<string, int> listOfSubstring = new Dictionary<string, int>();

            for (int i = 0; i < s.Length; i++)
            {
                for (int j = i; j < s.Length; j++)
                {
                    string subString = s.Substring(i, j - i + 1);
                    char[] characters = subString.ToArray();
                    Array.Sort(characters);
                    subString = new string(characters);

                    if (listOfSubstring.ContainsKey(subString))
                    {
                        listOfSubstring[subString] += 1;
                    }
                    else
                    {
                        listOfSubstring.Add(subString,1);
                    }
                }
            }

           foreach (var substring in listOfSubstring)
            {
                count += (substring.Value * (substring.Value - 1)) / 2; //n*(n-1)/2
            }
            
            return count;
    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int q = Convert.ToInt32(Console.ReadLine().Trim());

        for (int qItr = 0; qItr < q; qItr++)
        {
            string s = Console.ReadLine();

            int result = Result.sherlockAndAnagrams(s);

            textWriter.WriteLine(result);
        }

        textWriter.Flush();
        textWriter.Close();
    }
}
